name: Deploy PatientRecoverySystem to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    # Сборка backend-образа
    - name: Build backend Docker image
      run: docker build -t recovery-backend -f RecoverySystem.API/Dockerfile .

    # Сборка frontend-образа
    - name: Build frontend Docker image
      run: docker build -t recovery-frontend ./recovery-frontend

    # Сохраняем образы в tar-файлы
    - name: Save Docker images
      run: |
        docker save recovery-backend -o backend.tar
        docker save recovery-frontend -o frontend.tar
        ls -lh  # проверка, что файлы реально есть

    # Устанавливаем rsync (для копирования по SSH)
    - name: Install rsync
      run: sudo apt-get update && sudo apt-get install -y rsync openssh-client

    # Загружаем файлы вручную через rsync
    - name: Upload files to EC2 via rsync
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        echo "$EC2_KEY" > private_key.pem
        chmod 600 private_key.pem

        rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" \
          backend.tar frontend.tar docker-compose.yml \
          $EC2_USER@$EC2_HOST:~/patient-recovery

    # Запуск на EC2 через SSH
    - name: Deploy on EC2 via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd ~/patient-recovery
          docker load -i backend.tar
          docker load -i frontend.tar
          docker compose down || true
          docker compose up -d